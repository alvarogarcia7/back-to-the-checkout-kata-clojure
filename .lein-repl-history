(file "")
(use 'clojure.java.io)
(file "")
(source get-in)
(def rules-file (file rules-path))
(def rules-path "./dev-resources/rules.clj")
(def rules-file (file rules-path))
rules-file
(slurp rules-path)
(read-string (slurp rules-path))
((read-string (slurp rules-path)))
(eval (read-string (slurp rules-path)))
side-effectful
(side-effectful)
(slurp rules-path)
(read-string (slurp rules-path))
(load "dev-resources/rules"
)
(load "../dev-resources/rules")
rules
(read-string (slurp rules-path))
(def rules (eval (read-string (slurp rules-path))))
rules
(filter #(-> true) rules)
(eval (read-string (slurp rules-path)))
(def rules (eval (read-string (slurp rules-path))))
rules
(filter #(-> true) rules)
(filter #(-> %) rules)
(filter #(= (:name %) :side-effectful) rules)
(first (filter #(= (:name %) :side-effectful) rules))
(:expr (first (filter #(= (:name %) :side-effectful) rules)))
